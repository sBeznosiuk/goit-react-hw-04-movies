{"version":3,"sources":["api/api.js","Components/MovieList/MovieList.js","Components/MoviePage/MoviesPage.js"],"names":["API_KEY","axios","defaults","baseURL","trendingMovies","get","then","res","data","searchMovie","movie","movieDetails","movieId","movieCast","id","movieReviews","withRouter","location","map","item","to","pathname","state","from","title","MoviesPage","query","onChange","e","value","target","setState","onSubmit","preventDefault","length","results","action","this","htmlFor","type","name","Component"],"mappings":"yIAAA,+LAEMA,EAAU,mCAEhBC,IAAMC,SAASC,QAAU,+BAEzB,IAAMC,EAAiB,WACrB,OAAOH,IACJI,IADI,sCAC+BL,IACnCM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAGfC,EAAc,SAAAC,GAClB,OAAOT,IACJI,IADI,gCACyBL,EADzB,iCACyDU,IAC7DJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAGfG,EAAe,SAAAC,GACnB,OAAOX,IACJI,IADI,iBACUO,EADV,oBAC6BZ,EAD7B,oBAEJM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAGfK,EAAY,SAAAC,GAChB,OAAOb,IACJI,IADI,iBACUS,EADV,4BACgCd,EADhC,oBAEJM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAGfO,EAAe,SAAAD,GACnB,OAAOb,IAAMI,IAAN,6CACiCS,EADjC,4BACuDd,EADvD,6B,gCC9BT,8BAyBegB,iBAtBG,SAAC,GAAD,IAAGR,EAAH,EAAGA,KAAMS,EAAT,EAASA,SAAT,OAChB,6BACGT,EAAKU,KAAI,SAAAC,GAAI,OACZ,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYF,EAAKL,IACzBQ,MAAO,CAAEC,KAAMN,IAHnB,SAMGE,EAAKK,SAPDL,EAAKL,a,yGCHdW,E,4MACJH,MAAQ,CACNd,KAAM,GACNkB,MAAO,I,EAKTC,SAAW,SAAAC,GACT,IAAQC,EAAUD,EAAEE,OAAZD,MAER,EAAKE,SAAS,CAAEL,MAAOG,K,EAGzBG,SAAW,SAAAJ,GACTA,EAAEK,iBAEA,EAAKX,MAAMI,MAAMQ,QACjBzB,YAAY,EAAKa,MAAMI,OAAOpB,MAAK,YAAkB,IAAf6B,EAAc,EAAdA,QAEpC,OADA,EAAKJ,SAAS,CAAEvB,KAAM2B,IACfA,M,wDAdb,c,oBAiBA,WACE,OACE,qCACE,uBAAMC,OAAO,SAASJ,SAAUK,KAAKL,SAArC,UACE,wBAAOM,QAAQ,SAAf,0BAEE,uBAAOC,KAAK,OAAOC,KAAK,SAASb,SAAUU,KAAKV,cAElD,wBAAQY,KAAK,SAAb,uBAEF,6BACE,cAAC,IAAD,CAAW/B,KAAM6B,KAAKf,MAAMd,gB,GAlCbiC,aAyCVhB","file":"static/js/MoviesPage.11d0c245.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '1ac1fd301cd441bc3d222350adc1c163';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\n\r\nconst trendingMovies = () => {\r\n  return axios\r\n    .get(`/trending/movie/day?api_key=${API_KEY}`)\r\n    .then(res => res.data);\r\n};\r\n\r\nconst searchMovie = movie => {\r\n  return axios\r\n    .get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${movie}`)\r\n    .then(res => res.data);\r\n};\r\n\r\nconst movieDetails = movieId => {\r\n  return axios\r\n    .get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\r\n    .then(res => res.data);\r\n};\r\n\r\nconst movieCast = id => {\r\n  return axios\r\n    .get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\r\n    .then(res => res.data);\r\n};\r\n\r\nconst movieReviews = id => {\r\n  return axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\r\n  );\r\n};\r\n\r\nexport { trendingMovies, searchMovie, movieDetails, movieCast, movieReviews };\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst MovieList = ({ data, location }) => (\r\n  <ul>\r\n    {data.map(item => (\r\n      <li key={item.id}>\r\n        <Link\r\n          to={{\r\n            pathname: `movies/${item.id}`,\r\n            state: { from: location },\r\n          }}\r\n        >\r\n          {item.title}\r\n        </Link>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nMovieList.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\r\n  location: PropTypes.any,\r\n};\r\n\r\nexport default withRouter(MovieList);\r\n","import React, { Component } from 'react';\r\nimport { searchMovie } from '../../api/api';\r\nimport MovieList from '../MovieList/MovieList';\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    data: [],\r\n    query: '',\r\n  };\r\n\r\n  componentDidUpdate() {}\r\n\r\n  onChange = e => {\r\n    const { value } = e.target;\r\n\r\n    this.setState({ query: value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    !!this.state.query.length &&\r\n      searchMovie(this.state.query).then(({ results }) => {\r\n        this.setState({ data: results });\r\n        return results;\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <form action=\"submit\" onSubmit={this.onSubmit}>\r\n          <label htmlFor=\"search\">\r\n            Search movie:\r\n            <input type=\"text\" name=\"search\" onChange={this.onChange} />\r\n          </label>\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n        <ul>\r\n          <MovieList data={this.state.data} />\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}