{"version":3,"sources":["Components/MovieReviews/MovieReviews.js"],"names":["MovieReviews","state","reviews","a","movieReviews","this","props","movieId","then","data","results","res","setState","length","map","review","author","content","id","Component"],"mappings":"mOAIMA,E,4MAIJC,MAAQ,CACNC,QAAS,I,8FAGX,iCAAAC,EAAA,sEACQC,YAAaC,KAAKC,MAAMC,SAC3BC,MAAK,qBAAGC,KAAgBC,WACxBF,MAAK,SAAAG,GAAG,OAAI,EAAKC,SAAS,CAAEV,QAASS,OAH1C,gD,0EAKA,WACE,IAAQT,EAAYG,KAAKJ,MAAjBC,QACR,OACE,6BACKA,EAAQW,OACTX,EAAQY,KAAI,SAAAC,GAAM,OAChB,+BACE,oDAAgBA,EAAOC,WACvB,sCAAOD,EAAOE,aAFPF,EAAOG,OAMlB,sD,GAzBiBC,aAgCZnB","file":"static/js/MovieReviews.02e77b83.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { movieReviews } from '../../api/api';\r\n\r\nclass MovieReviews extends Component {\r\n  static propTypes = {\r\n    movieId: PropTypes.any.isRequired,\r\n  };\r\n  state = {\r\n    reviews: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await movieReviews(this.props.movieId)\r\n      .then(({ data }) => data.results)\r\n      .then(res => this.setState({ reviews: res }));\r\n  }\r\n  render() {\r\n    const { reviews } = this.state;\r\n    return (\r\n      <ul>\r\n        {!!reviews.length ? (\r\n          reviews.map(review => (\r\n            <li key={review.id}>\r\n              <h2>Author: {`${review.author}`}</h2>\r\n              <p>{`${review.content}`}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <h2>No reviews yet</h2>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieReviews;\r\n"],"sourceRoot":""}